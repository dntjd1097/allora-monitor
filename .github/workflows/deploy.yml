name: Deploy to Production

on:
    push:
        branches:
            - main

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    deploy:
        runs-on: self-hosted
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Create docker network if not exists
              run: |
                  sudo docker network create allora-web-network || true
                  sudo usermod -aG docker $USER || true
                  newgrp docker || true

            - name: Setting up directories
              run: |
                  mkdir -p $(pwd)/backend/data
                  chmod 777 $(pwd)/backend/data
                  mkdir -p $(pwd)/nginx/certbot/conf
                  mkdir -p $(pwd)/nginx/certbot/www
                  mkdir -p $(pwd)/nginx/dhparam
                  chmod -R 777 $(pwd)/nginx

            - name: Check if dhparam.pem exists
              id: check_dhparam
              run: |
                  if [ ! -f "$(pwd)/nginx/dhparam/dhparam.pem" ]; then
                      echo "::set-output name=exists::false"
                  else
                      echo "::set-output name=exists::true"
                  fi

            - name: Generate DH parameters if not exists
              if: steps.check_dhparam.outputs.exists == 'false'
              run: |
                  sudo openssl dhparam -out $(pwd)/nginx/dhparam/dhparam.pem 2048

            - name: Download SSL configuration files if not exists
              run: |
                  if [ ! -f "$(pwd)/nginx/certbot/conf/options-ssl-nginx.conf" ]; then
                      curl -s https://raw.githubusercontent.com/certbot/certbot/master/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf > $(pwd)/nginx/certbot/conf/options-ssl-nginx.conf
                  fi
                  if [ ! -f "$(pwd)/nginx/certbot/conf/ssl-dhparams.pem" ]; then
                      curl -s https://raw.githubusercontent.com/certbot/certbot/master/certbot/certbot/ssl-dhparams.pem > $(pwd)/nginx/certbot/conf/ssl-dhparams.pem
                  fi

            - name: Build and deploy with Docker Compose
              run: |
                  sudo docker compose down || true
                  sudo docker compose up -d --build
                  sudo docker system prune -f

            - name: Check running containers
              run: sudo docker ps

            - name: Show logs
              run: |
                  echo "Backend logs:"
                  sudo docker logs allora-monitor-backend --tail 20
                  echo "Frontend logs:"
                  sudo docker logs allora-monitor-frontend --tail 20
                  echo "Nginx logs:"
                  sudo docker logs allora-monitor-nginx --tail 20
