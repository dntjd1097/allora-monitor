upstream frontend {
    server frontend_1:3000;
    server frontend_2:3000;
    server frontend_3:3000;
    # 라운드 로빈 방식으로 로드 밸런싱 (기본값)
    # least_conn; # 연결 수가 가장 적은 서버로 요청 전달
    # ip_hash; # 클라이언트 IP 기반 세션 유지
}

server {
    listen 280;
    server_name allora-inference.kro.kr;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 헬스 체크 엔드포인트
    location /health {
        return 200 'OK';
        add_header Content-Type text/plain;
    }
}

server {
    listen 280;
    server_name backend.allora-inference.kro.kr;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
} 