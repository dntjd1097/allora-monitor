# 프론트엔드 서비스에 대한 업스트림 설정
upstream frontend_servers {
    # least_conn 로드 밸런싱: 연결 수가 가장 적은 서버에 새 연결 할당
    least_conn;
    
    # 도커 서비스 이름을 사용하면 도커가 자동으로 DNS 해결
    # 도커 스웜 모드에서는 서비스 이름(frontend)으로 자동으로 모든 레플리카 발견
    server frontend:3000;
    
    # 연결 유지 시간 및 최대 실패 시도 설정
    keepalive 32;
    
    # 상태 체크를 위한 헬스 체크
    # health_check interval=10 fails=3 passes=2;
}

server {
    listen 280;
    server_name allora-inference.kro.kr;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        proxy_pass http://frontend_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 효율적인 프록시 처리를 위한 설정
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # 연결 유지 설정
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    location /api/ {
        rewrite ^/api/(.*) /$1 break;
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 헬스 체크 엔드포인트
    location /health {
        return 200 'OK';
        add_header Content-Type text/plain;
    }
}

server {
    listen 280;
    server_name backend.allora-inference.kro.kr;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
} 